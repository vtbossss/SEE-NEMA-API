openapi: 3.0.3
info:
  title: SEE-NEMA API
  version: 1.0.0
  description: SEE-NEMA API is a robust API built using Django REST Framework that
    allows users to create and manage a personalized movie watchlist. Users can register
    for an account, authenticate via JWT, and perform CRUD operations on their watchlist,
    including adding, updating, and deleting movie entries. The API fetches movie
    details from a third-party service, providing dynamic content for an enriched
    user experience.
paths:
  /api/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/watchlist/:
    get:
      operationId: watchlist_list
      tags:
      - watchlist
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Watchlist'
          description: ''
  /api/watchlist/{id}/delete/:
    delete:
      operationId: watchlist_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watchlist
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/watchlist/{id}/update/:
    put:
      operationId: watchlist_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watchlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watchlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Watchlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Watchlist'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
          description: ''
    patch:
      operationId: watchlist_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - watchlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWatchlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWatchlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWatchlist'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
          description: ''
  /api/watchlist/add/:
    post:
      operationId: watchlist_add_create
      tags:
      - watchlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watchlist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Watchlist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Watchlist'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watchlist'
          description: ''
components:
  schemas:
    PatchedWatchlist:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        release_date:
          type: string
          format: date
          nullable: true
        added_on:
          type: string
          format: date-time
          readOnly: true
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
      required:
      - password
      - password_confirm
      - username
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    Watchlist:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        release_date:
          type: string
          format: date
          nullable: true
        added_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - added_on
      - id
      - title
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
